import { type NextPage } from "next";
import Head from "next/head";
import { type FormEvent, useState } from "react";
import { AiOutlineLoading3Quarters } from "react-icons/ai";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const mutation = trpc.generate.youtube.useMutation();

  const [input, setInput] = useState({
    alias: "",
    topic: "",
  });

  const submitForm = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (mutation.isLoading || input.alias === "" || input.topic === "") return;
    mutation.mutate({
      topic: input.topic.trim(),
      alias: `@${input.alias.trim()}`,
    });
  };

  return (
    <>
      <Head>
        <title>Youtube Title Generator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className=" mb-16 flex items-center gap-4 rounded-lg bg-gray-900 p-4 text-2xl shadow-lg">
          <div className="select-none text-lg font-semibold text-gray-400">
            Title Generated
          </div>
          <div className="min-w-[10rem] max-w-[42rem] select-all rounded-lg font-bold text-white">
            {mutation.data}
          </div>
        </div>
        <form
          onSubmit={submitForm}
          className="flex flex-col items-center rounded-lg bg-gray-900 p-4 shadow-lg"
        >
          <div className="mb-4">
            <label
              htmlFor="alias"
              className="text-md block py-2 px-2 font-semibold text-white"
            >
              Alias <span className="text-red-600">*</span>
            </label>
            <div className="relative block">
              <span className="absolute inset-y-0 left-0 flex items-center pl-2 font-semibold text-gray-300">
                @
              </span>
              <input
                id="alias"
                type="text"
                required
                onChange={(e) =>
                  setInput((prev) => ({
                    ...prev,
                    alias: e.target.value,
                  }))
                }
                className={
                  "  rounded-lg bg-gray-800 py-2 pl-8 pr-4 font-semibold text-white outline-none transition focus:bg-gray-700 focus:outline-indigo-800"
                }
                value={input.alias}
              />
            </div>
          </div>
          <div className="mb-6">
            <label
              htmlFor="topic"
              className="text-md block py-2 px-2 font-semibold text-white "
            >
              Topic <span className="text-red-600">*</span>
            </label>
            <input
              id="topic"
              type="text"
              required
              onChange={(e) =>
                setInput((prev) => ({ ...prev, topic: e.target.value }))
              }
              className={
                " rounded-lg bg-gray-800 px-6  py-2 font-semibold text-white outline-none transition  focus:bg-gray-700 focus:outline-indigo-800"
              }
              value={input.topic}
            />
          </div>
          <button
            disabled={
              input.alias === "" || input.topic === "" || mutation.isLoading
                ? true
                : false
            }
            className=" rounded-lg bg-gray-800 px-4 py-2 font-semibold text-white transition hover:bg-gray-700 disabled:cursor-not-allowed disabled:opacity-60"
          >
            {mutation.isLoading ? (
              <span>
                <AiOutlineLoading3Quarters className=" animate-spin" />
              </span>
            ) : (
              <span>Generate</span>
            )}
          </button>
        </form>
      </main>
    </>
  );
};

export default Home;
